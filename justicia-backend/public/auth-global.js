// üîí AUTENTICACI√ìN GLOBAL - SISTEMA JUDICIAL - SESIONES NUNCA SE CIERRAN
// Este script se ejecuta en todas las p√°ginas para manejar la autenticaci√≥n

(function() {
    'use strict';
    
    // console.log('üîç [AUTH-GLOBAL.JS] Iniciando script de autenticaci√≥n global - SESIONES NUNCA SE CIERRAN...');
    
    // Verificar si el usuario est√° autenticado
    const checkAuth = async () => {
        // console.log('üîç [AUTH-GLOBAL.JS] Ejecutando checkAuth...');
        
        const token = sessionStorage.getItem('token');
        const currentPage = window.location.pathname;
        const isIndexPage = currentPage.includes('index.html') || currentPage === '/' || currentPage.endsWith('/');
        
        // console.log('üîç [AUTH-GLOBAL.JS] Token encontrado:', !!token);
        // console.log('üîç [AUTH-GLOBAL.JS] P√°gina actual:', currentPage);
        // console.log('üîç [AUTH-GLOBAL.JS] Es p√°gina index:', isIndexPage);
        
        // Si estamos en index.html, no verificar autenticaci√≥n aqu√≠
        if (isIndexPage) {
            // console.log('üîç [AUTH-GLOBAL.JS] Es p√°gina index, no verificando autenticaci√≥n aqu√≠...');
            return;
        }
        
        // Si no hay token, redirigir a login
        if (!token) {
            // console.log('üö® [AUTH-GLOBAL.JS] No hay token, redirigiendo a login...');
            window.location.href = 'index.html';
            return;
        }
        
        // console.log('üîç [AUTH-GLOBAL.JS] Verificando token con el servidor...');
        
        try {
            // Verificar que el token sea v√°lido
            const response = await fetch('http://192.168.1.17:5000/api/auth/verify', {
                headers: { 'Authorization': `Bearer ${token}` }
            });
            
            // console.log('üîç [AUTH-GLOBAL.JS] Respuesta del servidor:', response.status, response.statusText);
            
            if (!response.ok) {
                // console.log('üö® [AUTH-GLOBAL.JS] Token inv√°lido, COMENTADO - no se limpia sesi√≥n...');
                // sessionStorage.clear(); // COMENTADO: No limpiar sesi√≥n autom√°ticamente
                window.location.href = 'index.html';
                return;
            }
            
            const data = await response.json();
            // console.log('‚úÖ [AUTH-GLOBAL.JS] Usuario autenticado:', data.user);
            
            // Verificar permisos seg√∫n la p√°gina
            const userRole = data.user?.rol;
            // console.log('üîç [AUTH-GLOBAL.JS] Rol del usuario:', userRole);
            
            if (currentPage.includes('procedimientos.html') && userRole === 'usuario') {
                // console.log('üö® [AUTH-GLOBAL.JS] Usuario sin permisos para procedimientos, redirigiendo...');
                alert('Acceso restringido. No tiene permisos para gestionar procedimientos.');
                window.location.href = 'actividades.html';
                return;
            }
            
            // console.log('‚úÖ [AUTH-GLOBAL.JS] Autenticaci√≥n y permisos verificados correctamente');
            
        } catch (error) {
            // console.error('üö® [AUTH-GLOBAL.JS] Error verificando autenticaci√≥n:', error);
            // sessionStorage.clear(); // COMENTADO: No limpiar sesi√≥n autom√°ticamente
            window.location.href = 'index.html';
        }
    };
    
    // Funci√≥n para cerrar sesi√≥n - COMENTADA
    window.logout = () => {
        // console.log('üîç [AUTH-GLOBAL.JS] Logout COMENTADO - no se limpia sesi√≥n');
        // sessionStorage.clear(); // COMENTADO: No limpiar sesi√≥n
        window.location.href = 'index.html';
    };
    
    // Verificar autenticaci√≥n cuando se carga la p√°gina
    document.addEventListener('DOMContentLoaded', checkAuth);
    
})();